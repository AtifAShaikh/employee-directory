{"version":3,"sources":["utils/getUsers.js","components/DirectoryItem/index.js","components/DirectoryBody/index.js","App.js","index.js"],"names":["getUsers","a","data","i","fetch","method","newUser","json","newUserData","push","results","DirectoryItem","props","className","src","picture","width","name","title","first","last","gender","age","email","DirectoryBody","useState","e","eFiltered","employees","setEmployees","useEffect","then","console","log","type","onClick","newList","filter","item","filterMen","filterWomen","sort","b","dob","sortAgeIncreasing","sortAgeDecreasing","itemList","forEach","large","setItems","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2bb3ed69.chunk.js","sourcesContent":["const getUsers = async () => {\n    const data = [];\n    for(let i = 0; i<10; i++){\n        \n            // fetch('https://randomuser.me/api/', {\n            //     method: 'GET',\n            // }).then((res)=>{\n            //     // console.log(res);\n            //     return res.json();\n            // }).then((data)=>{\n            //     // console.log(data);\n            //     emps.push(data.results[0]);\n            // }); \n        const newUser = await fetch('https://randomuser.me/api/', {method: 'GET'});\n        const newUserData = await newUser.json();\n        // console.log(newUserData.results[0]);\n        data.push(newUserData.results[0]);\n    }\n    return data;\n}\n\nexport default getUsers;","import React from 'react';\n\nfunction DirectoryItem(props){\n    return(\n            <div className=\"card mb-2\">\n                <div className=\"card-body d-flex justify-content-center align-items-center\">\n                         <img src={props.picture} className=\"mr-3\" width=\"200px\"></img>\n                         <div>\n                             <h2>{props.name.title}. {props.name.first} {props.name.last}</h2>\n                             <p>{props.gender} | {props.age}</p>\n                             <h5>{props.email}</h5>\n                        </div>    \n                    </div>\n                </div>\n    );\n}\n\nexport default DirectoryItem;","import React, {useState, useEffect} from 'react';\nimport getUsers from '../../utils/getUsers';\nimport DirectoryItem from '../DirectoryItem';\n\nfunction DirectoryBody(){\n\n    const [employees, setEmployees] = useState({\n        e: [],\n        eFiltered: [],\n    });\n\n    useEffect(()=>{ \n        getUsers().then((data) => {\n            console.log(data);\n            setEmployees({\n                e: data,\n                eFiltered: data,\n            })\n        });\n    }, []);\n\n    // console.log(getUsers());\n\n    const setItems = () => {\n        let itemList = [];\n        let i = -1;\n        employees.eFiltered.forEach(item => {\n            i++;\n            itemList.push(\n            <DirectoryItem \n                key={i}\n                name={item.name}\n                gender={item.gender}\n                age={item.dob.age}\n                email={item.email}\n                picture={item.picture.large}\n            ></DirectoryItem>\n            );\n        });\n        return(itemList);\n    }\n\n    const clearFilter = () => {\n        console.log('clearing filter');\n        setEmployees({\n            e: employees.e,\n            eFiltered: employees.e,\n        });\n    }\n\n    const filterMen = () => {\n        console.log('filtering men');\n        const newList = employees.e.filter((item)=>{\n            if(item.gender==='male'){\n                return item;\n            }\n        });\n        setEmployees({\n            e: employees.e,\n            eFiltered: newList,\n        })\n    }\n    \n    const filterWomen = () => {\n        console.log('filtering women');\n        const newList = employees.e.filter((item)=>{\n            if(item.gender==='female'){\n                return item;\n            }\n        });\n        setEmployees({\n            e: employees.e,\n            eFiltered: newList,\n        })\n    }\n\n    const sortAgeIncreasing = () => {\n        const newList = employees.e.sort((a,b)=>(a.dob.age < b.dob.age) ? 1 : -1)\n        setEmployees({\n            e: employees.e,\n            eFiltered: newList,\n        })\n    }\n\n    const sortAgeDecreasing = () => {\n        const newList = employees.e.sort((a,b)=>(a.dob.age > b.dob.age) ? 1 : -1)\n        setEmployees({\n            e: employees.e,\n            eFiltered: newList,\n        })\n    }\n    \n    \n\n    return(\n        <div className=\"container\">\n            <h1>Employees</h1>\n\n            <div className=\"row ml-1 mb-4\">\n                 <button type=\"button\" className=\"btn btn-primary mr-2\" onClick={()=>{clearFilter()}}>Clear</button>\n                 <button type=\"button\" className=\"btn btn-primary mr-2\" onClick={()=>{filterMen()}}>♂️ Males</button>\n                 <button type=\"button\" className=\"btn btn-primary mr-2\" onClick={()=>{filterWomen()}}>♀️ Females</button>\n                 <button type=\"button\" className=\"btn btn-primary mr-2\" onClick={()=>{sortAgeIncreasing()}}>Sort by Age ⬆️</button>\n                 <button type=\"button\" className=\"btn btn-primary mr-2\" onClick={()=>{sortAgeDecreasing()}}>Sort by Age ⬇️</button>\n            </div>\n\n            {setItems()}\n\n            \n        </div>\n\n            \n            \n    );\n}\n\nexport default DirectoryBody;","import DirectoryBody from './components/DirectoryBody';\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <DirectoryBody></DirectoryBody>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}